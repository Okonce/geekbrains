'''
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
 Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
 Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
 скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
 Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
 При этом работа скрипта не должна завершаться.
'''

class MyException(Exception):
    def __init__(self, input_data):
        self.input_data = input_data

l = []
numbers = [str(x) for x in range(10)]

while True:
    input_data = input('Введите: ')
    if input_data == 'stop':
        print(l)
        break
    else:
        try:
            if input_data in numbers:
                l.append(int(input_data))
            else:
                raise MyException('invalid literal for int()')
        except ValueError as err:
            print(err)

# Я запуталась с этими классами-исключениями =(
