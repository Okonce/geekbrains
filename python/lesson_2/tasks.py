# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
# элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.

l = [True, 1, 'privet', 5, (1,2,3), {'a':4, 'b':5}, {1,3,5,7}]
types = [str, dict, set, int, bool, tuple]
for i in l:
    a = [f'Type {t}' for t in types if type(i) == t]
    print(a[0])

# 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1,
# 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка элементов
# необходимо использовать функцию input().

l = [1,2,3,4,5,6,7,8, 90,1000, 98654]
print(l)

for num, i in enumerate(l):
    if num % 2 == 0 and num != len(l)-1:
        l[num], l[num+1] = l[num+1], l[num]
print(l)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и через dict.

my_dict = {'зима':[12,1,2], 'весна':[3,4,5], 'лето': [6,7,8], 'осень':[9,10,11]}

month = int(input())
for k,v in my_dict.items():
    if month in v:
        print(k)

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.

sentence = input()
for num, i in enumerate(sentence.split(' ')):
    if len(i) > 10:
        print(num, i[:10])
    else:
        print(num, i)

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
# с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.

my_list = [7, 5, 3, 3, 2]
print(my_list)
n = int(input("введите число: "))
c = 0
for x in my_list:
    if n <= x:
        c +=1
my_list.insert(c, n)
print(my_list)

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и
# словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

from collections import defaultdict

my_dict = defaultdict(list)
number = int(input('введите количество товаров: '))
l = []

for num in range(1, number + 1):
    n = input(f'введите название {num} товара: ')
    p = int(input(f'введите цену {num} товара: '))
    q = int(input(f'введите количество {num} товара: '))
    u = input(f'введите единицу измерения {num} товара: ')
    results = (num, {'название': n, 'цена': p, 'количество': q, 'цена': u})
    l.append(results)

    my_dict['название'].append(n)
    my_dict['цена'].append(p)
    my_dict['количество'].append(q)
    my_dict['ед.'].append(u)

print(l)
print(my_dict)
